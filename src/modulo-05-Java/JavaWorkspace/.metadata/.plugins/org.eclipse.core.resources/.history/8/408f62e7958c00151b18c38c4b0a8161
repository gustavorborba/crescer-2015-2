package cwi;

import java.awt.List;
import java.util.ArrayList;

public class LinkedList {
	private Node last,first;
	public void addFirst(String value)
	{
		Node node=new Node(value,first);
		if(first == null){
			last = node;
		}
		first = node;
	}
	public String getFirst()
	{
		return first.getValue();
	}
	public String getLast(){
		return last.getValue();
	}
	
	public ArrayList<String> lista(){
		ArrayList<String> lista= new ArrayList<String>();
		Node node= first;
		while(node != null){
			lista.add(node.getValue());
			node=node.getnext();
			}	
		return lista;
	}
	public int size(){
		int size=0;
		Node node= first;
		while(node != null){
			size++;
			node=node.getnext();
			}
		return size;
	}
	public void addLast(String value){
		Node node = new Node(value,last);
		if(first == null){
			first=node;
		}
		last=node;
	}
	public void removeFirst(){
		first = first.getnext();
	}
	public void remove(int index){
		Node node = this.findNode(index -1);
		Node removido = node.getnext();
		node.setNext(removido.getnext());
	}
	private Node findNode(int index){
		Node node = this.first;
		for(int i=0; i <=index;i++){
			node.getnext();
		}
		return node;
	}
	public void AddMiddle(String value){
		int local = this.size()/2;
		Node node = this.findNode(local-1);
		Node adicionar = new Node(value);
		adicionar.setNext(node.getnext());
		node.setNext(adicionar);
		
	}
}
